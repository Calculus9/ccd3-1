!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).ccd3=e.ccd3||{})}(this,(function(e){"use strict";function t(e,t){this._data=e||this._data,this._option=t||this._option,this.render()}class s{constructor(e){this._Class=e}init(e,s){const r=new(0,this._Class)(e,s);return[r,(e,s)=>t.call(r,e,s)]}}const r=new class{constructor(){this._strategies=new Map}registerStrategy(e,t){try{if(this._strategies.has(e))throw new Error(`The [${chartkey}] has been registered.\nPlease change the name and re register.`);return this._strategies.set(e,new s(t)),this}catch(e){console.error(e)}}useStrategy(e,t){try{const{name:s}=t;if("string"!=typeof s)throw new Error("The [name] attribute must be included in option.\n[name] is used to indicate a chart.");if(!this._strategies.has(s))throw new Error(`The [${s}] chart doesn't exist in the chart factory.`);return this._strategies.get(s).init(e,t)}catch(e){console.error(e)}}};e.init=(e,t)=>r.useStrategy(e,t),e.register=(e,t)=>{r.registerStrategy(e,t)},Object.defineProperty(e,"__esModule",{value:!0})}));
